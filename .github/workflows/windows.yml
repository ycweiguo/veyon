name: "CI Builds (Windows)"

on:
  push:
    branches:
      - master  # 只在推送到 master 分支时触发

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # 第一步：检查代码
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      # 第二步：安装依赖（Visual Studio 和 CMake）
      - name: Install dependencies
        run: |
          choco install -y cmake visualstudio2019community
          
      # 第三步：下载并安装 Qt
      - name: Download and install Qt5
        run: |
          # 下载 Qt 安装程序
          Invoke-WebRequest -Uri "https://download.qt.io/archive/qt/5.15/5.15.2/qt-opensource-windows-x86-5.15.2.exe" -OutFile "qt-installer.exe"
          # 安装 Qt
          Start-Process -FilePath ".\qt-installer.exe" -ArgumentList "/silent" -Wait
          
      # 第四步：配置 CMake
      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="C:/Qt/5.15.2/msvc2019_64/lib/cmake" ..

      # 第五步：构建 Veyon
      - name: Build Veyon
        run: |
          cd build
          cmake --build . --config Release

      # 第六步：上传构建产物
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: veyon-windows-build
          path: build/Release/*  # 假设你的构建产物在 Release 文件夹中
